@startuml Classes
skinparam classAttributeIconSize 0
class CkApiRequest{
  -requestString: string
  +request(): string
}

abstract class BaseEntity{
  +localId: guid
  +localCreatedAt: DateTime
  +localModifiedAt: DateTime
  +lastCrawledAt: DateTime
}

class RecipeModel{
  +createdAt: DateTime
  +difficulty: int
  +editor: UserModel
  +hasImage: bool
  +hasVideo: bool
  +id: int
  +imageCount: int
  +isPlus: bool
  +isPremium: bool
  +isRejected: bool
  +isSubmitted: bool
  +nutrition: string
  +owner: UserModel
  +preparationTime: int
  +previewImageId: int
  +previewImageUrlTemplate: string
  +rating: double
  +numVotes: int
  +siteUrl: string
  +slug: string
  +status: int
  +submissionDate: DateTime
  +subtitle: string
  +title: string
  +type: int
}

class UserModel{
  +id: string
  +username: string
  +rank: int
  +role: string
  +isVerified: bool
  +hasAvatar: bool
  +hasPaid: bool
  +deleted: bool
  +avatarImageUrlTemplate: string
  +displayName: string
}

class CommentModel{
  +id: int
  +owner: UserModel
  +createdAt: DateTime
  +text: string
  +helpful: bool
  +helpfulCount: int
  +parentID: int
  +children: int
}

class TagModel{
  +id: int
  +name: string
}

class IngredientModel{
  +id: int
  +name: string
  +unit: string
  +unitId: int
  +amount: float
  +isBasic: bool
  +usageInfo: string
  +url: string
  +foodId: int
  +productGroup: string
  +blsKey: string
  +previewImageUrlTemplate: string
  +sponsoring: string
}

class Bots{
  -appDbContext: ChefkochDbContext
  +RecipeScraper()
  +UserScraper()
}

class ChefkochDbContext {
  +Users: DbSet<UserModel>
  +Recipes: DbSet<RecipeModel>
  +Comments: DbSet<CommentModel>
  +Tags: DbSet<TagModel>
  +Ingredients: DbSet<IngredientModel>
}

BaseEntity <|-- UserModel
BaseEntity <|-- RecipeModel
BaseEntity <|-- IngredientModel
BaseEntity <|-- CommentModel
BaseEntity <|-- TagModel

@enduml