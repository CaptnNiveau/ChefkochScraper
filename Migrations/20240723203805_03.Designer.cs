// <auto-generated />
using System;
using ChefkochScraper;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChefkochScraper.Migrations
{
    [DbContext(typeof(ChefkochContext))]
    [Migration("20240723203805_03")]
    partial class _03
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("ChefkochScraper.FullTagModel", b =>
                {
                    b.Property<Guid>("LocalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LocalCreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LocalModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RecipeDbModelLocalId")
                        .HasColumnType("TEXT");

                    b.Property<int>("id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LocalId");

                    b.HasIndex("RecipeDbModelLocalId");

                    b.ToTable("FullTags");
                });

            modelBuilder.Entity("ChefkochScraper.IngredientDbModel", b =>
                {
                    b.Property<Guid>("LocalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LocalCreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LocalModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("blsKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("foodId")
                        .HasColumnType("TEXT");

                    b.Property<string>("id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("isBasic")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("productGroup")
                        .HasColumnType("TEXT");

                    b.Property<string>("url")
                        .HasColumnType("TEXT");

                    b.HasKey("LocalId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("ChefkochScraper.IngredientGroupDbModel", b =>
                {
                    b.Property<Guid>("LocalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LocalCreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LocalModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RecipeDbModelLocalId")
                        .HasColumnType("TEXT");

                    b.Property<string>("header")
                        .HasColumnType("TEXT");

                    b.HasKey("LocalId");

                    b.HasIndex("RecipeDbModelLocalId");

                    b.ToTable("IngredientGroups");
                });

            modelBuilder.Entity("ChefkochScraper.IngredientUsedDbModel", b =>
                {
                    b.Property<Guid>("LocalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IngredientGroupDbModelLocalId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LocalCreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LocalModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<double?>("amount")
                        .HasColumnType("REAL");

                    b.Property<Guid>("ingredientLocalId")
                        .HasColumnType("TEXT");

                    b.Property<string>("previewImageUrlTemplate")
                        .HasColumnType("TEXT");

                    b.Property<string>("unit")
                        .HasColumnType("TEXT");

                    b.Property<string>("unitId")
                        .HasColumnType("TEXT");

                    b.Property<string>("usageInfo")
                        .HasColumnType("TEXT");

                    b.HasKey("LocalId");

                    b.HasIndex("IngredientGroupDbModelLocalId");

                    b.HasIndex("ingredientLocalId");

                    b.ToTable("IngredientsUsed");
                });

            modelBuilder.Entity("ChefkochScraper.RecipeDbModel", b =>
                {
                    b.Property<Guid>("LocalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LocalCreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LocalModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("additionalDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("affiliateContent")
                        .HasColumnType("TEXT");

                    b.Property<double?>("carbohydrateContent")
                        .HasColumnType("REAL");

                    b.Property<string>("categoryIds")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("cookingTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("createdAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("difficulty")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("editorLocalId")
                        .HasColumnType("TEXT");

                    b.Property<double?>("fatContent")
                        .HasColumnType("REAL");

                    b.Property<bool?>("hasImage")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("hasVideo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("imageCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ingredientsText")
                        .HasColumnType("TEXT");

                    b.Property<string>("instructions")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("isIndexable")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("isPlus")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("isPremium")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("isRejected")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("isSubmitted")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("kCalories")
                        .HasColumnType("INTEGER");

                    b.Property<string>("metaDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("metaTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("miscellaneousText")
                        .HasColumnType("TEXT");

                    b.Property<int?>("numVotes")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ownerLocalId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("preparationTime")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("previewImageCreditsLocalId")
                        .HasColumnType("TEXT");

                    b.Property<string>("previewImageId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("previewImageOwnerLocalId")
                        .HasColumnType("TEXT");

                    b.Property<string>("previewImageUrlTemplate")
                        .HasColumnType("TEXT");

                    b.Property<double?>("proteinContent")
                        .HasColumnType("REAL");

                    b.Property<double?>("rating")
                        .HasColumnType("REAL");

                    b.Property<string>("recipeVideoId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("restingTime")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("servings")
                        .HasColumnType("INTEGER");

                    b.Property<string>("siteUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("slug")
                        .HasColumnType("TEXT");

                    b.Property<int?>("status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("submissionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("subtitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("tags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .HasColumnType("TEXT");

                    b.Property<int?>("totalTime")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("type")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("viewCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("LocalId");

                    b.HasIndex("editorLocalId");

                    b.HasIndex("ownerLocalId");

                    b.HasIndex("previewImageCreditsLocalId");

                    b.HasIndex("previewImageOwnerLocalId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("ChefkochScraper.UserModel", b =>
                {
                    b.Property<Guid>("LocalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LocalCreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LocalModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("avatarImageUrlTemplate")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("deleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("displayName")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("hasAvatar")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("hasPaid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("isVerified")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("rank")
                        .HasColumnType("INTEGER");

                    b.Property<string>("role")
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.HasKey("LocalId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChefkochScraper.FullTagModel", b =>
                {
                    b.HasOne("ChefkochScraper.RecipeDbModel", null)
                        .WithMany("fullTags")
                        .HasForeignKey("RecipeDbModelLocalId");
                });

            modelBuilder.Entity("ChefkochScraper.IngredientGroupDbModel", b =>
                {
                    b.HasOne("ChefkochScraper.RecipeDbModel", null)
                        .WithMany("ingredientGroups")
                        .HasForeignKey("RecipeDbModelLocalId");
                });

            modelBuilder.Entity("ChefkochScraper.IngredientUsedDbModel", b =>
                {
                    b.HasOne("ChefkochScraper.IngredientGroupDbModel", null)
                        .WithMany("ingredients")
                        .HasForeignKey("IngredientGroupDbModelLocalId");

                    b.HasOne("ChefkochScraper.IngredientDbModel", "ingredient")
                        .WithMany()
                        .HasForeignKey("ingredientLocalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ingredient");
                });

            modelBuilder.Entity("ChefkochScraper.RecipeDbModel", b =>
                {
                    b.HasOne("ChefkochScraper.UserModel", "editor")
                        .WithMany()
                        .HasForeignKey("editorLocalId");

                    b.HasOne("ChefkochScraper.UserModel", "owner")
                        .WithMany()
                        .HasForeignKey("ownerLocalId");

                    b.HasOne("ChefkochScraper.UserModel", "previewImageCredits")
                        .WithMany()
                        .HasForeignKey("previewImageCreditsLocalId");

                    b.HasOne("ChefkochScraper.UserModel", "previewImageOwner")
                        .WithMany()
                        .HasForeignKey("previewImageOwnerLocalId");

                    b.Navigation("editor");

                    b.Navigation("owner");

                    b.Navigation("previewImageCredits");

                    b.Navigation("previewImageOwner");
                });

            modelBuilder.Entity("ChefkochScraper.IngredientGroupDbModel", b =>
                {
                    b.Navigation("ingredients");
                });

            modelBuilder.Entity("ChefkochScraper.RecipeDbModel", b =>
                {
                    b.Navigation("fullTags");

                    b.Navigation("ingredientGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
